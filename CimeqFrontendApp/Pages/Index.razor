@page "/"
@using System.Text;
@using Newtonsoft.Json;
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject HttpClient httpClient


<div class="container mt-5">
    <h3>Login</h3>
    <form @onsubmit="HandleSubmit">
        <div class="form-group mb-3">
            <input type="text" class="form-control" id="username" placeholder="User" @bind="username" />
        </div>
        <div class="form-group mb-3">
            <input type="password" class="form-control" id="password" placeholder="Password" @bind="password" />
        </div>
        <button type="submit" class="btn btn-outline-primary">Login</button>
    </form>
</div>



@code {
    private string username;
    private string password;

    private async Task HandleSubmit()
    {
        var loginModel = new LoginModel
        {
            Email = username,
            Password = password
        };

        var response = await LoginAsync(loginModel);

        if (response != null && response.Token != null)
        {
            SaveTokenInCookie(response.Token);
            ShowAlert("Login successful!");
            
            NavigationManager.NavigateTo("/clients");
        }
        else
        {
            ShowAlert("Login failed. Check your credentials.");
        }
    }

    private async Task<LoginResponse> LoginAsync(LoginModel loginModel)
    {
        var apiUrl = "/login";

        var content = new StringContent(JsonConvert.SerializeObject(loginModel), Encoding.UTF8, "application/json");
        var response = await httpClient.PostAsync(apiUrl, content);

        if (response.IsSuccessStatusCode)
        {
            var jsonResponse = await response.Content.ReadAsStringAsync();
            var result = JsonConvert.DeserializeObject<LoginResponse>(jsonResponse);
            return result;
        }

        return null;
    }

    private void ShowAlert(string message)
    {
        JSRuntime.InvokeVoidAsync("alert", message);
    }

    private void SaveTokenInCookie(string token)
    {
        JSRuntime.InvokeVoidAsync("setCookie", "token", token, 365, "/");
    }

    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }

    public class LoginResponse
    {
        public int Id { get; set; }
        public string Username { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public string Token { get; set; }
    }
}
